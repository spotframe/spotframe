version: '2.1'
services:

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=spotframe
      - POSTGRES_PASSWORD=spotframe
      - POSTGRES_DB=spotframe
    volumes:
      - ./tmp/pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spotframe"]
      interval: 10s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.7.14-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
      - 15674:15674
    command:
      - sh
      - -c
      - |
        rabbitmq-plugins enable rabbitmq_web_stomp
        docker-entrypoint.sh rabbitmq-server
    volumes:
      - ./tmp/amnesia:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics node_health_check"]
      interval: 10s
      timeout: 5s
      retries: 10

  migrate:
    image: spotframe
    build:
      context: .
    command: migrate
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=spotframe
      - DB_PASS=spotframe
      - DB_NAME=spotframe
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

  api:
    image: spotframe
    build:
      context: .
    command: api
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - 5000:5000
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=spotframe
      - DB_PASS=spotframe
      - DB_NAME=spotframe
      - BROKER_HOST=rabbitmq
      - BROKER_PORT=5672
      - BROKER_USER=guest
      - BROKER_PASS=guest
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  crontab:
    image: spotframe
    build:
      context: .
    command: cron
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=spotframe
      - DB_PASS=spotframe
      - DB_NAME=spotframe
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_started

